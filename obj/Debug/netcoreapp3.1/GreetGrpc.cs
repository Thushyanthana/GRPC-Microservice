// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace userGRPC {
  public static partial class userService
  {
    static readonly string __ServiceName = "greet.userService";

    static readonly grpc::Marshaller<global::userGRPC.Empty> __Marshaller_greet_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::userGRPC.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::userGRPC.Users> __Marshaller_greet_Users = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::userGRPC.Users.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::userGRPC.User> __Marshaller_greet_User = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::userGRPC.User.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::userGRPC.UserRowIdFilter> __Marshaller_greet_UserRowIdFilter = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::userGRPC.UserRowIdFilter.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::userGRPC.CalculateGrade> __Marshaller_greet_CalculateGrade = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::userGRPC.CalculateGrade.Parser.ParseFrom);

    static readonly grpc::Method<global::userGRPC.Empty, global::userGRPC.Users> __Method_Get = new grpc::Method<global::userGRPC.Empty, global::userGRPC.Users>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_greet_Empty,
        __Marshaller_greet_Users);

    static readonly grpc::Method<global::userGRPC.User, global::userGRPC.User> __Method_Post = new grpc::Method<global::userGRPC.User, global::userGRPC.User>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Post",
        __Marshaller_greet_User,
        __Marshaller_greet_User);

    static readonly grpc::Method<global::userGRPC.UserRowIdFilter, global::userGRPC.User> __Method_GetByID = new grpc::Method<global::userGRPC.UserRowIdFilter, global::userGRPC.User>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByID",
        __Marshaller_greet_UserRowIdFilter,
        __Marshaller_greet_User);

    static readonly grpc::Method<global::userGRPC.User, global::userGRPC.User> __Method_Put = new grpc::Method<global::userGRPC.User, global::userGRPC.User>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Put",
        __Marshaller_greet_User,
        __Marshaller_greet_User);

    static readonly grpc::Method<global::userGRPC.UserRowIdFilter, global::userGRPC.Empty> __Method_Delete = new grpc::Method<global::userGRPC.UserRowIdFilter, global::userGRPC.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_greet_UserRowIdFilter,
        __Marshaller_greet_Empty);

    static readonly grpc::Method<global::userGRPC.UserRowIdFilter, global::userGRPC.CalculateGrade> __Method_Calculate = new grpc::Method<global::userGRPC.UserRowIdFilter, global::userGRPC.CalculateGrade>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Calculate",
        __Marshaller_greet_UserRowIdFilter,
        __Marshaller_greet_CalculateGrade);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::userGRPC.GreetReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of userService</summary>
    [grpc::BindServiceMethod(typeof(userService), "BindService")]
    public abstract partial class userServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::userGRPC.Users> Get(global::userGRPC.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::userGRPC.User> Post(global::userGRPC.User request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::userGRPC.User> GetByID(global::userGRPC.UserRowIdFilter request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::userGRPC.User> Put(global::userGRPC.User request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::userGRPC.Empty> Delete(global::userGRPC.UserRowIdFilter request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::userGRPC.CalculateGrade> Calculate(global::userGRPC.UserRowIdFilter request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(userServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Get, serviceImpl.Get)
          .AddMethod(__Method_Post, serviceImpl.Post)
          .AddMethod(__Method_GetByID, serviceImpl.GetByID)
          .AddMethod(__Method_Put, serviceImpl.Put)
          .AddMethod(__Method_Delete, serviceImpl.Delete)
          .AddMethod(__Method_Calculate, serviceImpl.Calculate).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, userServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Get, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::userGRPC.Empty, global::userGRPC.Users>(serviceImpl.Get));
      serviceBinder.AddMethod(__Method_Post, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::userGRPC.User, global::userGRPC.User>(serviceImpl.Post));
      serviceBinder.AddMethod(__Method_GetByID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::userGRPC.UserRowIdFilter, global::userGRPC.User>(serviceImpl.GetByID));
      serviceBinder.AddMethod(__Method_Put, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::userGRPC.User, global::userGRPC.User>(serviceImpl.Put));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::userGRPC.UserRowIdFilter, global::userGRPC.Empty>(serviceImpl.Delete));
      serviceBinder.AddMethod(__Method_Calculate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::userGRPC.UserRowIdFilter, global::userGRPC.CalculateGrade>(serviceImpl.Calculate));
    }

  }
}
#endregion
